# .github/workflows/build-latex.yml (Revised)

name: Build LaTeX Solutions and Publish

on:
  push:
    branches:
      - main

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    env:
      TEX_ROOT: tex-source # Adjust this to your main solutions directory
      JEKYLL_ROOT: docs      # The folder where your Jekyll site lives

    steps:
    # ... (previous steps: checkout, setup TeX Live) ...

    - name: Create directory for generated PDFs
      run: mkdir -p ${{ github.workspace }}/generated-pdfs

    - name: Compile Main LaTeX Document to PDF
      run: |
        # We only compile main.tex, which includes all other sections
        MAIN_TEX_FILE="${{ env.TEX_ROOT }}/main.tex"
        OUTPUT_DIR="${{ github.workspace }}/generated-pdfs"
        OUTPUT_PDF_NAME="aluffi-solutions-book.pdf" # Choose a meaningful name for your complete book PDF

        echo "Compiling $MAIN_TEX_FILE to $OUTPUT_DIR/$OUTPUT_PDF_NAME..."
        latexmk -pdf -outdir="$OUTPUT_DIR" "$MAIN_TEX_FILE" # Compile only main.tex
        mv "$OUTPUT_DIR/main.pdf" "$OUTPUT_DIR/$OUTPUT_PDF_NAME" # Rename the generated main.pdf
        latexmk -c "$MAIN_TEX_FILE" # Clean auxiliary files for main.tex

    - name: Copy generated PDFs into Jekyll site assets
      run: |
        JEKYLL_ASSETS_DIR="${{ github.workspace }}/${{ env.JEKYLL_ROOT }}/assets/solutions/"
        mkdir -p "$JEKYLL_ASSETS_DIR"
        # Copy the single generated PDF
        cp ${{ github.workspace }}/generated-pdfs/aluffi-solutions-book.pdf "$JEKYLL_ASSETS_DIR"


    - name: Setup Ruby for Jekyll
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.x' # Use a recent stable Ruby version, e.g., '3.2' or '3.3'
        bundler-cache: true # runs 'bundle install' and caches gems
        cache-version: 1 # Increment this number if you change Gemfile.lock

    - name: Build Jekyll site
      run: |
        cd ${{ env.JEKYLL_ROOT }}
        bundle exec jekyll build --trace # --trace for debugging if needed

    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v4
      if: github.ref == 'refs/heads/main'
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ${{ github.workspace }}/${{ env.JEKYLL_ROOT }}/_site # Publish Jekyll's output directory
        cname: your-custom-domain.com # Optional: if you have a custom domain